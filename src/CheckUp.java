import java.io.File;
import java.io.FileWriter;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Scanner;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author SINDH
 */
public class CheckUp extends javax.swing.JFrame {
    ArrayList<BillingInfo> allRecord =new ArrayList<>();
    
     ArrayList<Medicine> allMedicines = new ArrayList<>();
      ArrayList<Patient> allpatient = new ArrayList();

    /**
     * Creates new form CheckUp
     */
    public CheckUp() {
        initComponents();
        readAllMData();
        readAllRData();
        readAllPData();
        LoadMed();
    }
    
      void readAllRData() {
        try {
            File pfile = new File("record.txt");
            Scanner scanner = new Scanner(pfile);
            while (scanner.hasNextLine()) {
                String data = scanner.nextLine();
                String[] curdata = data.split(";");

                BillingInfo record = new BillingInfo();
                
                // Trim the strings before parsing
                record.setPatientID(Integer.parseInt(curdata[0].trim()));
                record.setFee(Integer.parseInt(curdata[1].trim()));
                record.setRecommandation(curdata[2].trim());
                record.setDate(curdata[3].trim());
              String [] mlist = curdata[4].split(";");
              
              for(int i=0; i<mlist.length; i++){
                  record.setMedicineID(Integer.parseInt(mlist[i]));
              }
                

                // Add the patient to the list
                allRecord.add(record);
            }
            scanner.close();
        } catch (Exception e) {
            System.out.println("Error reading data: " + e.getMessage());
        }
    }
    
    void LoadMed(){
        allm.removeAllItems();
        for(int i=0; i<allMedicines.size();i++){
            allm.addItem(allMedicines.get(i).getId()+";"+allMedicines.get(i).getName());
        
    }
    }
     void readAllPData() {
        try {
            File pfile = new File("pdata.txt");
            Scanner scanner = new Scanner(pfile);
            while (scanner.hasNextLine()) {
                String data = scanner.nextLine();
                String[] curdata = data.split(";");

                Patient patient = new Patient();
                
                // Trim the strings before parsing
                patient.setId(Integer.parseInt(curdata[0].trim())); // ID is an integer
                patient.setName(curdata[1].trim());
                patient.setAge(Integer.parseInt(curdata[2].trim()));
                patient.setGender(curdata[3].trim());
                patient.setAddress(curdata[4].trim());
                patient.setContact(curdata[5].trim());

                // Add the patient to the list
                allpatient.add(patient);
            }
        } catch (Exception e) {
            System.out.println("Error reading data: " + e.getMessage());
        }
    }
    
     void readAllMData() {
        try {
            File pfile = new File("mdata.txt");
            Scanner scanner = new Scanner(pfile);
            while (scanner.hasNextLine()) {
                String data = scanner.nextLine();
                String[] curdata = data.split(";");

                Medicine medicine = new Medicine();
                
                // Trim the strings before parsing
                medicine.setId(Integer.parseInt(curdata[0].trim())); // ID is an integer
medicine.setName(curdata[1].trim());
medicine.setSellingPrice(Double.parseDouble(curdata[2].trim())); // Selling price should be a double
medicine.setBuyingPrice(Double.parseDouble(curdata[3].trim())); // Buying price should be a double
medicine.setQuantity(Integer.parseInt(curdata[4].trim())); // Quantity is an integer
medicine.setDescription(curdata[5].trim());

                // Add the patient to the list
                allMedicines.add(medicine);
            }
            scanner.close();
        } catch (Exception e) {
            System.out.println("Error reading data: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        allm = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        mlist = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        rc = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        fee = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/checkup.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Perpetua Titling MT", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 102));
        jLabel2.setText("Checkup Menu");

        jButton3.setFont(new java.awt.Font("Perpetua Titling MT", 1, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 51, 102));
        jButton3.setText("Home");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Serif", 3, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 153));
        jLabel3.setText("Celestia Health Foundation");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(jLabel2)
                        .addGap(213, 213, 213)
                        .addComponent(jButton3)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(22, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(19, 19, 19))))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Serif", 3, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 153));
        jLabel4.setText("Patient ID:");

        quantity.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Serif", 3, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 153, 153));
        jLabel5.setText("Medicines:");

        allm.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        allm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        mlist.setColumns(20);
        mlist.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mlist.setRows(5);
        jScrollPane1.setViewportView(mlist);

        jButton1.setFont(new java.awt.Font("Perpetua Titling MT", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 51, 102));
        jButton1.setText("Add medicines");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Serif", 3, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 153, 153));
        jLabel6.setText("Medicines List:");

        jLabel7.setFont(new java.awt.Font("Serif", 3, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 153, 153));
        jLabel7.setText("Fee:");

        id.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Serif", 3, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 153, 153));
        jLabel8.setText("Recomendation:");

        rc.setColumns(20);
        rc.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rc.setRows(5);
        jScrollPane2.setViewportView(rc);

        jButton2.setFont(new java.awt.Font("Perpetua Titling MT", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 51, 102));
        jButton2.setText("Save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Serif", 3, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 153, 153));
        jLabel9.setText("Quantity:");

        fee.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7))
                                .addGap(52, 52, 52)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(id, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                                    .addComponent(fee)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel9))
                                        .addGap(47, 47, 47)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(allm, 0, 209, Short.MAX_VALUE)
                                            .addComponent(quantity)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(107, 107, 107)
                                .addComponent(jButton1))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(427, 427, 427)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(allm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel7))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jButton1)
                        .addGap(39, 39, 39)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(915, 722));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        setVisible(false);
        new hh().setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    boolean checkforquantity(){
        int currmid= Integer.parseInt(allm.getSelectedItem().toString().split(";")[0]);
        for(int i=0; i<allMedicines.size(); i++){
            if(currmid==allMedicines.get(i).getId()){
                if(Integer.parseInt(quantity.getText())>allMedicines.get(i).getQuantity())
              
                return true;
            }
            
        }
        
        return false;
        
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if(quantity.getText().equals(" ")|| allm.getSelectedItem().toString().equals(" ")){
            JOptionPane.showMessageDialog(null, "Please Select Medicine Or Enter Quantity");
        }
        
        else if(checkforquantity()){
            
            JOptionPane.showMessageDialog(null, "Current Quantity is greater then available quantity");
            
        }
        
        else{
          mlist.append(allm.getSelectedItem()+";"+quantity.getText()+"\n");
          quantity.setText("");
        }
        
  

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

   boolean patientidExit() {
    for (int i = 0; i < allpatient.size(); i++) {
        if (id.getText().equals(String.valueOf(allpatient.get(i).getId()))) {
            return false; // Patient ID exists
        }
    }
    return true; // Patient ID does not exist
}
    
        void SaveAllMData() {
        try {
            FileWriter fileWriter = new FileWriter("mdata.txt");
            for(int i=0; i<allMedicines.size(); i++){
                fileWriter.write(allMedicines.get(i).getId()+";"+allMedicines.get(i).getName()+";"+allMedicines.get(i).getSellingPrice()+";"+allMedicines.get(i).getBuyingPrice()+";"+allMedicines.get(i).getQuantity()+";"+allMedicines.get(i).getDescription()+"\n");
            }
            fileWriter.close();
            
            
        }
        catch(Exception e){
            
        }
    }
        
        void SaveAllRData() {
    try {
        FileWriter fileWriter = new FileWriter("record.txt");
        for (int i = 0; i < allRecord.size(); i++) {
            fileWriter.append(allRecord.get(i).getPatientID() + ";" +
                            allRecord.get(i).getFee() + ";" +
                             allRecord.get(i).getRecommandation() + ";" +
                            allRecord.get(i).getDate() + ";");
            ArrayList<Integer> tmp = allRecord.get(i).getMedicineID();
            for (int j = 0; j < tmp.size(); j++) {
                fileWriter.append(tmp.get(j) + ";");
            }
            fileWriter.append("\n");
        }
        fileWriter.close();
    } catch (Exception e) {
        System.out.println("Error saving record data: " + e.getMessage());
    }
}
    
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         if (id.getText().equals("") || fee.getText().equals("") || rc.getText().equals("")) {
        JOptionPane.showMessageDialog(null, "All fields are required!"); 
    } else if (patientidExit()) {
        JOptionPane.showMessageDialog(null, "Patient ID does not exist.");
    } else {
        // Existing logic for saving the record
        try {
            BillingInfo billinginfo = new BillingInfo();
            String Bill = " ";
            int total = 0;
            billinginfo.setPatientID(Integer.parseInt(id.getText()));
            billinginfo.setFee(Integer.parseInt(fee.getText()));
            String[] mdata = mlist.getText().split("\n");
            for (int i = 0; i < mdata.length; i++) {
                billinginfo.setMedicineID(Integer.parseInt(mdata[i].split(";")[0]));
                int curQ = Integer.parseInt(mdata[i].split(";")[2]);
                int curID = Integer.parseInt(mdata[i].split(";")[0]);
             
                for (int j = 0; j < allMedicines.size(); j++) {
                    if (allMedicines.get(j).getId() == curID) {
                        Bill += allMedicines.get(j).getName() + " = " + allMedicines.get(j).getSellingPrice()+"\n";  
                        total += allMedicines.get(j).getSellingPrice();  
                        allMedicines.get(j).setQuantity(allMedicines.get(j).getQuantity() - curQ);
                    }
                }
            }
            billinginfo.setRecommandation(rc.getText());
            DateFormat cDateFormat = new SimpleDateFormat("dd:MM:yyyy");
            Date cdata = new Date();
            billinginfo.setDate(cDateFormat.format(cdata));
            
           allRecord.add(billinginfo);
            SaveAllMData();
            SaveAllRData();
            Bill += "\nTotal Medicines Cost= " + total;
            Bill += "\nDoctor Fee = " + fee.getText();
            Bill += "\nTotal = " + (total + Integer.parseInt(fee.getText()));
            
            JOptionPane.showMessageDialog(null, "Your Bill \n" + Bill);
            id.setText("");
            fee.setText("");
            rc.setText("");
            mlist.setText("");
        } catch (Exception e) {
            System.out.println(e);
        }
    }

     
        
// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckUp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> allm;
    private javax.swing.JTextField fee;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea mlist;
    private javax.swing.JTextField quantity;
    private javax.swing.JTextArea rc;
    // End of variables declaration//GEN-END:variables
}
